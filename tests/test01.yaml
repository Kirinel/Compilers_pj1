---
name: prog
funcs:
  name: funcs
  funcs:
    -
      name: func
      ret_type: void
      globid: inc
      blk:
        name: blk
        contents:
          name: stmts
          stmts:
            -
              name: print
              exp:
                name: varval
                var: n
                expr_type: int
            -
              name: expstmt
              exp:
                name: assign
                expr_type: int
                var: n
                exp:
                  name: binop
                  op: add
                  expr_type: int
                  lhs:
                    name: varval
                    var: n
                    expr_type: int
                  rhs:
                    name: lit
                    value: 1
                    expr_type: int
            -
              name: expstmt
              exp:
                name: assign
                expr_type: int
                var: b
                exp:
                  name: binop
                  op: add
                  expr_type: int
                  lhs:
                    name: varval
                    var: b
                    expr_type: int
                  rhs:
                    name: lit
                    value: 1
                    expr_type: int
            -
              name: print
              exp:
                name: varval
                var: n
                expr_type: int
      vdecls:
        name: vdecls
        vars:
          -
            node: vdecl
            type: ref int
            var: n
          -
            node: vdecl
            type: ref int
            var: b
    -
      name: func
      ret_type: int
      globid: run
      blk:
        name: blk
        contents:
          name: stmts
          stmts:
            -
              name: vardeclstmt
              vdecl:
                node: vdecl
                type: int
                var: a
              exp:
                name: lit
                value: 5
                expr_type: int
            -
              name: vardeclstmt
              vdecl:
                node: vdecl
                type: int
                var: b
              exp:
                name: lit
                value: 1
                expr_type: int
            -
              name: if
              cond:
                name: binop
                op: gt
                expr_type: int
                lhs:
                  name: varval
                  var: a
                  expr_type: int
                rhs:
                  name: lit
                  value: 0
                  expr_type: int
              stmt:
                name: expstmt
                exp:
                  name: assign
                  expr_type: int
                  var: a
                  exp:
                    name: binop
                    op: mul
                    expr_type: int
                    lhs:
                      name: varval
                      var: a
                      expr_type: int
                    rhs:
                      name: lit
                      value: 2
                      expr_type: int
              else_stmt:
                name: expstmt
                exp:
                  name: assign
                  expr_type: int
                  var: a
                  exp:
                    name: lit
                    value: 0
                    expr_type: int
            -
              name: blk
              contents:
                name: stmts
                stmts:
                  -
                    name: vardeclstmt
                    vdecl:
                      node: vdecl
                      type: int
                      var: a
                    exp:
                      name: lit
                      value: 2
                      expr_type: int
                  -
                    name: blk
                    contents:
                      name: stmts
                      stmts:
                        -
                          name: vardeclstmt
                          vdecl:
                            node: vdecl
                            type: ref int
                            var: a
                          exp:
                            name: varval
                            var: b
                            expr_type: int
                        -
                          name: print
                          exp:
                            name: varval
                            var: a
                            expr_type: int
                        -
                          name: expstmt
                          exp:
                            name: assign
                            expr_type: int
                            var: a
                            exp:
                              name: binop
                              op: add
                              expr_type: int
                              lhs:
                                name: varval
                                var: a
                                expr_type: int
                              rhs:
                                name: lit
                                value: 1
                                expr_type: int
            -
              name: print
              exp:
                name: varval
                var: b
                expr_type: int
            -
              name: expstmt
              exp:
                name: funccall
                globid: inc
                expr_type: void
                params:
                  name: exps
                  exps:
                    -
                      name: varval
                      var: a
                      expr_type: int
                    -
                      name: varval
                      var: a
                      expr_type: int
            -
              name: vardeclstmt
              vdecl:
                node: vdecl
                type: int
                var: c
              exp:
                name: funccall
                globid: getarg
                expr_type: int
                params:
                  name: exps
                  exps:
                    -
                      name: lit
                      value: 2
                      expr_type: int
            -
              name: print
              exp:
                name: varval
                var: c
                expr_type: int
            -
              name: printslit
              string: "if test"
            -
              name: vardeclstmt
              vdecl:
                node: vdecl
                type: int
                var: m
              exp:
                name: lit
                value: 4
                expr_type: int
            -
              name: if
              cond:
                name: binop
                op: gt
                expr_type: int
                lhs:
                  name: varval
                  var: m
                  expr_type: int
                rhs:
                  name: lit
                  value: 0
                  expr_type: int
              stmt:
                name: blk
                contents:
                  name: stmts
                  stmts:
                    -
                      name: vardeclstmt
                      vdecl:
                        node: vdecl
                        type: int
                        var: n
                      exp:
                        name: varval
                        var: m
                        expr_type: int
                    -
                      name: expstmt
                      exp:
                        name: assign
                        expr_type: int
                        var: n
                        exp:
                          name: binop
                          op: add
                          expr_type: int
                          lhs:
                            name: varval
                            var: n
                            expr_type: int
                          rhs:
                            name: lit
                            value: 1
                            expr_type: int
              else_stmt:
                name: blk
                contents:
                  name: stmts
                  stmts:
                    -
                      name: expstmt
                      exp:
                        name: assign
                        expr_type: int
                        var: m
                        exp:
                          name: uop
                          op: minus
                          expr_type: int
                          exp:
                            name: varval
                            var: m
                            expr_type: int
            -
              name: blk
              contents:
                name: stmts
                stmts:
                  -
                    name: vardeclstmt
                    vdecl:
                      node: vdecl
                      type: int
                      var: n
                    exp:
                      name: lit
                      value: 1
                      expr_type: int
            -
              name: print
              exp:
                name: varval
                var: m
                expr_type: int
            -
              name: ret
              exp:
                name: binop
                op: add
                expr_type: int
                lhs:
                  name: lit
                  value: 7
                  expr_type: int
                rhs:
                  name: lit
                  value: 8
                  expr_type: int
externs:
  name: externs
  externs:
    -
      name: extern
      ret_type: int
      globid: getarg
      tdecls:
        name: tdecls
        types:
          - int
    -
      name: extern
      ret_type: float
      globid: getargf
      tdecls:
        name: tdecls
        types:
          - int
...
